
plugins {
    id 'com.android.library'
    id 'com.google.devtools.ksp' version '2.2.0-2.0.2'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.10'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.2.10'

    id "com.vanniktech.maven.publish" version "0.34.0"
}

android {
    namespace 'com.afkanerd.smswithoutborders_libsmsmms'
    compileSdk 36

    defaultConfig {
        minSdk 24
        targetSdk 36

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ksp {
            arg('room.schemaLocation', "$projectDir/schemas")
        }

        resourceConfigurations += ["en", "fr", "ru", "de", "pl"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        compose true
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildscript {
        ext.kotlin_version = '2.2'
        ext.agp_version1 = '8.12.2'
        //....
        dependencies {
//            classpath "com.android.tools.build:gradle:$agp_version1"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        }

        repositories {
            mavenCentral() // or jcenter()

            google()
            maven {
                url = uri("https://jitpack.io/")
            }
        }
    }
}

import com.vanniktech.maven.publish.AndroidSingleVariantLibrary
mavenPublishing {
    // the first parameter represennts which variant is published
    // the second whether to publish a sources jar
    // the third whether to publish a javadoc jar
    configure(new AndroidSingleVariantLibrary("release", true, true))
}

dependencies {

    implementation "androidx.core:core-ktx:1.17.0"
    implementation "androidx.appcompat:appcompat:1.7.1"
    implementation "com.google.android.material:material:1.12.0"
    implementation "androidx.room:room-common-jvm:2.7.2"
    implementation "androidx.room:room-runtime:2.7.2"
    implementation "androidx.paging:paging-common:3.3.6"
    implementation "androidx.compose.runtime:runtime:1.9.0"
    implementation "androidx.compose.ui:ui-tooling-preview:1.9.0"
    implementation "androidx.navigation:navigation-runtime-ktx:2.9.3"
    implementation "androidx.navigation:navigation-compose:2.9.3"
    implementation "androidx.compose.material3:material3:1.3.2"
    implementation "androidx.compose.animation:animation:1.9.0"
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.7.0"
    annotationProcessor "androidx.room:room-compiler:2.7.2"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"

    implementation "org.fossify:android-smsmms:c3e678befd"
    implementation "com.googlecode.libphonenumber:libphonenumber:9.0.12"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.9.2"
    debugImplementation "androidx.compose.ui:ui-tooling:1.9.0"

    def room_version = "2.7.2"

    // If this project uses any Kotlin source, use Kotlin Symbol Processing (KSP)
    // See KSP Quickstart to add KSP to your build
    ksp "androidx.room:room-compiler:$room_version"

    // If this project only uses Java source, use the Java annotationProcessor
    // No additional plugins are necessary
    annotationProcessor "androidx.room:room-compiler:$room_version"

//    // optional - RxJava2 support for Room
//    implementation libs.androidx.room.rxjava2
//
//    // optional - RxJava3 support for Room
//    implementation libs.androidx.room.rxjava3
//
//    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation libs.androidx.room.guava

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    def composeBom = platform('androidx.compose:compose-bom:2025.07.00')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.material:material'
    // or skip Material Design and build directly on top of foundational components
    implementation 'androidx.compose.foundation:foundation'
    // or only import the main APIs for the underlying toolkit systems,
    // such as input and measurement/layout
    implementation 'androidx.compose.ui:ui'

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Optional - Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3.adaptive:adaptive'

    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.10.1'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.9.2'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'

    implementation "com.google.accompanist:accompanist-permissions:0.37.3"
    implementation("androidx.paging:paging-compose:3.3.6")

    implementation("androidx.preference:preference:1.2.1")

    implementation("io.coil-kt.coil3:coil-compose:3.3.0")
    implementation("io.coil-kt.coil3:coil-network-okhttp:3.3.0")

    implementation("io.coil-kt.coil3:coil-video:3.3.0")

    implementation("com.google.code.gson:gson:2.13.1")

    implementation("sh.calvin.autolinktext:autolinktext:2.0.2")
}